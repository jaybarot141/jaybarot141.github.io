{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/default-data.service.ts","./src/app/enrollment.service.ts","./src/app/form-details/form-details.component.ts","./src/app/form-details/form-details.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/register-form/register-form.component.ts","./src/app/register-form/register-form.component.html","./src/app/register-success/register-success.component.ts","./src/app/register-success/register-success.component.html","./src/app/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACuB;AACS;AACnC;AACuB;;;AAG3E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACjD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yFAAoB,EAAC;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,qGAAwB,EAAC;CACxD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;AAEM,MAAM,iBAAiB,GAAG,CAAC,4FAAqB,EAAE,qGAAwB;IAC/E,kEAAa,EAAE,yFAAoB,CAAC,CAAC;;;;;;;;;;;;;ACrBvC;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;ICK1C,yEACE;IAAA,yEACE;IAAA,4EACE;IADM,+SAAiB;IACvB,qEAAS;IAAA,4DAAS;IACtB,4DAAM;IACR,4DAAM;;ADHC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,SAAS,CAAC;QACX,aAAQ,GAAG,KAAK,CAAC;KAKzB;IAHC,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;;wEANU,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,wEACE;QAAA,4FACF;QAAA,4DAAK;QACP,4DAAM;QACN,wGACE;QAKF,2EAA+B;;QAN1B,0DAAiB;QAAjB,+EAAiB;;6FDET,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACG;AACY;AACmB;AAC5B;;;;;;AAgBxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,0DAAW;YACX,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY,iXAIZ,uEAAa;QACb,0DAAW;QACX,oEAAgB;QAChB,qEAAgB;6FAKP,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,oEAAgB;oBAChB,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,kBAAkB;IAG7B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAD7B,SAAI,GAAW,+BAA+B,CAAC;IACd,CAAC;IAE1C,gBAAgB;QACd,yBAAyB;QACzB,gDAAgD;QAChD,OAAO;YACL,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAC;SAC1H;IACH,CAAC;;oFAXU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,iBAAiB;IAE5B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QADrC,SAAI,GAAG,8BAA8B,CAAC;IACG,CAAC;IAE1C,MAAM,CAAC,IAAU;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;IAC9C,CAAC;;kFANU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAO;QAAA,iFAAsB;QAAA,4DAAQ;QACvC,4DAAM;QACN,yEACE;QAAA,4EAAqD;QAAA,+EAAoB;QAAA,4DAAS;QACpF,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,gEACA;QAAA,yEACE;QAAA,qEAAG;QAAA,iFAAqB;QAAA,4DAAI;QAC9B,4DAAM;;6FDNO,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICgBxC,4EAAwD;IAAA,iFAAsB;IAAA,4DAAQ;;;IADxF,sEACE;IAAA,qHAAwD;IAC1D,4DAAM;;;;IADuB,0DAA4B;IAA5B,sFAA4B;;ADV1D,MAAM,aAAa;IAExB;QADO,aAAQ,GAAG,EAAE,CAAC;IACL,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCN1B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,uDAA6C;QAAA,4DAAK;QACxD,4DAAM;QACR,4DAAM;QACN,6EACE;QAAA,yEACE;QAAA,yEACA;QAAA,wEAAO;QAAA,8EAAkB;QAAA,4DAAQ;QACjC,4DAAM;QACN,0EACE;QAAA,+EAGA;QADuB,oLAAsB;QAF7C,4DAGA;QAAA,4GACE;QAEJ,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,8EACmB;QAAA,+EAAmB;QAAA,4DAAS;QACjD,4DAAM;QACR,4DAAM;QAER,4DAAO;QACT,4DAAM;;;;QA1BI,0DAA6C;QAA7C,uHAA6C;QAUxC,0DAAiD;QAAjD,qGAAiD;QACjC,iFAAsB;QACxC,0DAAqD;QAArD,+GAAqD;QAQ1B,0DAAiC;QAAjC,sFAAiC;;6FDjB5D,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACrB;;;;;;;;ICgCnB,4EAAyD;IAAA,4EAAiB;IAAA,4DAAQ;;;IAClF,4EAAwD;IAAA,8EAAmB;IAAA,4DAAQ;;;IAFrF,sEACE;IAAA,qIAAyD;IACzD,qIAAwD;IAC1D,4DAAM;;;;IAFuB,0DAA6B;IAA7B,qFAA6B;IAC7B,0DAA4B;IAA5B,oFAA4B;;;IAavD,4EAAyD;IAAA,mFAAwB;IAAA,4DAAQ;;;IACzF,4EAAwD;IAAA,2FAAgC;IAAA,4DAAQ;;;IAFlG,sEACE;IAAA,qIAAyD;IACzD,qIAAwD;IAC1D,4DAAM;;;;IAFuB,0DAA6B;IAA7B,qFAA6B;IAC7B,0DAA4B;IAA5B,oFAA4B;;;IAUvD,yEAAyC;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,yEAAQ;;;;IAwBrD,0EACE;IAAA,0EACE;IAAA,4EAAgC;IAAA,uDAAW;IAAA,4DAAQ;IACnD,gFAEF;IADqC,2WAAgC;IADnE,4DAEF;IAAA,4DAAM;IACR,4DAAM;;;;IAJ8B,0DAAW;IAAX,4EAAW;IAE1B,0DAAiB;IAAjB,8EAAiB;;;;IAzE1C,6EACE;IADuB,iUAAuB;IAC9C,0EACE;IAAA,0EACE;IAAA,2EAA6B;IAAA,gEAAK;IAAA,4DAAQ;IAC5C,4DAAM;IACN,0EACE;IAAA,gFAEA;IAFwE,+VAA4B;IAApG,4DAEA;IAAA,4EAAyE;IAAA,4EAAgB;IAAA,4DAAQ;IACnG,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,4EAA6B;IAAA,kEAAM;IAAA,4DAAQ;IAC7C,4DAAM;IACN,2EACE;IAAA,iFAEA;IAFuE,iWAA6B;IAApG,4DAEA;IAAA,4HACE;IAGJ,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,4EAA6B;IAAA,kEAAM;IAAA,4DAAQ;IAC7C,4DAAM;IACN,2EACE;IAAA,iFAEA;IAFqE,iWAA6B;IAAlG,4DAEA;IAAA,4HACE;IAGJ,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,kFAEE;IAFM,qZAAkC;IAExC,8EAAwB;IAAA,uEAAW;IAAA,4DAAS;IAC5C,kIAAyC;IAC3C,4DAAS;IACT,6EAA8E;IAAA,6FAAiC;IAAA,4DAAQ;IACzH,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,4EAA6B;IAAA,4EAAgB;IAAA,4DAAQ;IACvD,4DAAM;IACR,4DAAM;IAaN,4HACE;IAMJ,4DAAM;IAEN,0EACE;IAAA,2EACE;IAAA,4EAA6B;IAAA,wFAA4B;IAAA,4DAAQ;IACjE,iFACF;IADwI,qWAAiC;IAAvK,4DACF;IAAA,4DAAM;IACR,4DAAM;IAEN,8EAEgD;IAAA,uEAAW;IAAA,4DAAS;IAEtE,4DAAO;;;;;;;;IAlFQ,0DAAiD;IAAjD,mGAAiD;IADc,0FAA4B;IAEzE,0DAA6C;IAA7C,+FAA6C;IAUf,0DAAmD;IAAnD,mGAAmD;IADrC,2FAA6B;IAE/F,0DAAwD;IAAxD,4GAAwD;IAapC,0DAAmD;IAAnD,mGAAmD;IADP,2FAA6B;IAE7F,0DAAwD;IAAxD,4GAAwD;IAU7D,0DAAmD;IAAnD,6GAAmD;IAD+E,0FAA4B;IAGpJ,0DAAgC;IAAhC,uFAAgC;IAEf,0DAAkD;IAAlD,4GAAkD;IAsB1E,0DAA+B;IAA/B,uFAA+B;IAYoG,0DAAiC;IAAjC,+FAAiC;IAM3K,0DAA+C;IAA/C,0GAA+C;;AD1F5C,MAAM,qBAAqB;IAWhC,YAAoB,kBAAqC,EACrC,mBAAuC;QADvC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,wBAAmB,GAAnB,mBAAmB,CAAoB;QAVpD,gBAAW,GAAG,EAAE,CAAC;QACxB,cAAS,GAAG,KAAK,CAAC,CAAC,mEAAmE;QACtF,gBAAW,GAAG,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;QACpD,gBAAW,GAAG;YACnB,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,sBAAsB,EAAC;YAChD,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,qBAAqB,EAAC;SAChD;QACM,mBAAc,GAAG,IAAI,CAAC;QAC7B,cAAS,GAAG,IAAI,0CAAI,CAAC,KAAK,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAC,IAAI,CAAC,CAAC;IAEX,CAAC;IAEhE,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;IACjE,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAG,KAAK,KAAK,SAAS,EAAC;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;aAC3C,SAAS,CACV,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,EACjC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAC1C;IACH,CAAC;;0FAjCU,qBAAqB;qGAArB,qBAAqB;QCVlC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA6B;QAAA,iFAAsB;QAAA,4DAAQ;QAC7D,4DAAM;QACN,yEACE;QAAA,4EAAqD;QAAA,mFAAwB;QAAA,4DAAS;QACxF,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,gEACA;QAAA,yEACA;QAAA,wDACE;QAAA,uHACE;QAyFJ,4DAAM;;QA3FN,2DACE;QADF,4FACE;QAAiD,0DAAkB;QAAlB,gFAAkB;;6FDHxD,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGALU,wBAAwB;wGAAxB,wBAAwB;QCPrC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEAAG;QAAA,sHAA2D;QAAA,4DAAI;QACpE,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,4EAA8C;QAAA,4EAAiB;QAAA,4DAAS;QAC1E,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDJO,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,IAAI;IACf,YACQ,IAAY,EACZ,KAAa,EACb,KAAa,EACb,IAAY,EACZ,QAAgB,EAChB,SAAkB;QALlB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAS;IACvB,CAAC;CACL;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RegisterFormComponent} from \"./register-form/register-form.component\";\nimport {RegisterSuccessComponent} from \"./register-success/register-success.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {FormDetailsComponent} from \"./form-details/form-details.component\";\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent},\n  { path: 'form', component: RegisterFormComponent},\n  { path: 'detail', component: FormDetailsComponent},\n  { path: 'success', component: RegisterSuccessComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [RegisterFormComponent, RegisterSuccessComponent,\n  HomeComponent, FormDetailsComponent];\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pracAng';\n  public isHidden = false;\n\n  Start(){\n    this.isHidden = true;\n  }\n}\n","<div id=\"title\" class=\"bg-lavender\">\n  <h1 align=\"center\">\n    Welcome to Angular Registration\n  </h1>\n</div>\n<div *ngIf=\"!isHidden\" class=\"row\" style=\"margin-top: 15%\">\n  <div class=\"col-md-6 offset-md-3\" style=\"text-align: center\">\n    <button (click)=\"Start()\" routerLink=\"/home\" class=\"btn btn-success start-btn\">\n      Let's GO!</button>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Datacast} from \"./datacast\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultDataService {\n\n  private _url: string = \"/assets/data/defaultdata.json\";\n  constructor(private _http: HttpClient) { }\n\n  getDefaultValues(){\n    // Observable<Datacast[]>\n    // return this._http.get<Datacast[]>(this._url);\n    return [\n      {\"name\": \"jay\", \"email\": \"jay@jay.com\", \"phone\": 1234567890, \"prof\": \"default\", \"timePref\": \"morning\", \"subscribe\": true}\n    ]\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"./user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnrollmentService {\n  _url = \"http://localhost:3000/enroll\";\n  constructor(private _http: HttpClient) { }\n\n  enroll(user: User){\n    return this._http.post<any>(this._url, user)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-details',\n  templateUrl: './form-details.component.html',\n  styleUrls: ['./form-details.component.css']\n})\nexport class FormDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <label>Welcome, [[Name Here]]</label>\n    </div>\n    <div class=\"col-md-4\">\n      <button routerLink=\"../form\" class=\"btn btn-warning\">Back to Form Filling</button>\n    </div>\n  </div>\n</div>\n<br>\n<div id=\"details\" class=\"container-fluid\">\n  <p>Here goes the details</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public userName = '';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"proceed\" class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h3>Welcome {{userName}}, to the Angular bootcamp</h3>\n    </div>\n  </div>\n  <form #userForm=\"ngForm\" novalidate>\n    <div class=\"form-group row\">\n      <div class=\"col-md-2 col-sm-4\">\n      <label>Provide your name:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input required #name=\"ngModel\" type=\"text\" class=\"form-control\"\n               [class.is-invalid]=\"name.invalid && name.touched\"\n               name=\"userName\" [(ngModel)]=\"userName\">\n        <div *ngIf=\"name.errors && (name.invalid && name.touched)\">\n          <small class=\"text-danger\" *ngIf=\"name.errors.required\">Name Field is Required</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\" style=\"text-align: center\">\n        <button class=\"btn btn-primary\" [disabled]=\"!userForm.form.valid\" type=\"submit\"\n        routerLink=\"/form\">Proceed to Register</button>\n      </div>\n    </div>\n\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../user\";\nimport { EnrollmentService } from \"../enrollment.service\";\nimport {DefaultDataService} from \"../default-data.service\";\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent implements OnInit {\n\n  public defaultData = [];\n  submitted = false; //Hide the form once it is submitted to avoid multiple data sending\n  proficiency = ['Beginner', 'Intermediate', 'Professional'];\n  public radioValues = [\n    {\"val\": \"morning\", \"lab\":\"Morning (9AM - 12PM)\"},\n    {\"val\": \"evening\", \"lab\":\"Evening (5PM - 8PM)\"}\n  ]\n  public selectHasError = true;\n  userModel = new User('Jay','jay@123',1234567890,'default','morning',true);\n  constructor(private _enrollmentService: EnrollmentService,\n              private _defaultdataService: DefaultDataService) { }\n\n  ngOnInit() {\n    this.defaultData = this._defaultdataService.getDefaultValues();\n  }\n\n  validateTopic(value){\n    if(value === \"default\"){\n      this.selectHasError = true;\n    } else {\n      this.selectHasError = false;\n    }\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    this._enrollmentService.enroll(this.userModel)\n      .subscribe(\n      data => console.log('Success!', data),\n          error => console.log('Error!', error)\n    )\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <label class=\"label-padding\">Welcome, [[Name Here]]</label>\n    </div>\n    <div class=\"col-md-4\">\n      <button routerLink=\"/detail\" class=\"btn btn-warning\">Details about the course</button>\n    </div>\n  </div>\n</div>\n<br>\n<div id=\"formdiv\" class=\"container-fluid\">\n{{defaultData}}\n  <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!submitted\" novalidate>\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Name:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"userName\" [(ngModel)]=\"userModel.name\"\n        required [class.is-invalid]=\"name.invalid && name.touched\">\n        <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">Name is required</small>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Email:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"email\" class=\"form-control\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"userModel.email\"\n        required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}\" [class.is-invalid]=\"email.invalid && email.touched\">\n        <div *ngIf=\"email.errors && (email.invalid && email.touched)\">\n          <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email is required</small>\n          <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Enter a valid email</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Phone:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"tel\" class=\"form-control\" #phone=\"ngModel\" name=\"phone\" [(ngModel)]=\"userModel.phone\"\n        required pattern=\".{10}\" [class.is-invalid]=\"phone.invalid && phone.touched\">\n        <div *ngIf=\"phone.errors && (phone.invalid && phone.touched)\">\n          <small class=\"text-danger\" *ngIf=\"phone.errors.required\">Phone number is required</small>\n          <small class=\"text-danger\" *ngIf=\"phone.errors.pattern\">Phone number should be 10 digits</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-4 col-sm 8 offset-md-1 offset-sm-1\">\n        <select (blur)=\"validateTopic(prof.value)\" (change)=\"validateTopic(prof.value)\" class=\"custom-select\" name=\"prof\" #prof=\"ngModel\" [(ngModel)]=\"userModel.prof\"\n        [class.is-invalid]=\"selectHasError && prof.touched\">\n          <option value=\"default\">Proficiency</option>\n          <option *ngFor=\"let prof of proficiency\">{{prof}}</option>\n        </select>\n        <small class=\"text-danger\" [class.d-none]=\"!selectHasError || prof.untouched\">Please choose a proficiency level</small>\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      <div class=\"row\">\n        <div class=\"col-md-2 col-sm-2\">\n          <label class=\"label-padding\">Time Preference:</label>\n        </div>\n      </div>\n<!--      <div class=\"row no-gutters\">-->\n<!--        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">-->\n<!--          <label class=\"form-check-label\">Morning (9AM - 12PM)</label>-->\n<!--          <input  style=\"margin-top: 0.4rem;margin-left: 1.0rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\" value=\"morning\" [(ngModel)]=\"userModel.timePref\">-->\n<!--        </div>-->\n<!--      </div>-->\n<!--      <div class=\"row no-gutters\">-->\n<!--        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">-->\n<!--          <label class=\"form-check-label\">Evening (5PM - 8PM)</label>-->\n<!--          <input style=\"margin-top: 0.4rem;margin-left: 1.9rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\" value=\"evening\" [(ngModel)]=\"userModel.timePref\">-->\n<!--        </div>-->\n<!--      </div>-->\n      <div *ngFor=\"let rad of radioValues\" class=\"row no-gutters\">\n        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">\n          <label class=\"form-check-label\">{{rad.lab}}</label>\n          <input  style=\"margin-top: 0.4rem;margin-left: 1.0rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\"\n                  required [value]=\"rad.val\" [(ngModel)]=\"userModel.timePref\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-6\">\n        <label class=\"label-padding\">Send me promotional offers :</label>\n        <input style=\"margin-top: 1.0rem; margin-left: 1.0rem\" class=\"form-check-input\" type=\"checkbox\" #subscribe=\"ngModel\" name=\"subscribe\" [(ngModel)]=\"userModel.subscribe\">\n      </div>\n    </div>\n<!--    routerLink=\"../success\"-->\n    <button style=\"margin-left: 10px\"\n            class=\"btn btn-primary\" type=\"submit\"\n    [disabled]=\"selectHasError || userForm.invalid\">Submit form</button>\n\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-success',\n  templateUrl: './register-success.component.html',\n  styleUrls: ['./register-success.component.css']\n})\nexport class RegisterSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <p>Congratulations! You Have Successfully submitted your form </p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <button routerLink=\"\" class=\"btn btn-success\">Back to Home Page</button>\n    </div>\n  </div>\n</div>\n","export class User {\n  constructor(\n   public name: string,\n   public email: string,\n   public phone: number,\n   public prof: string,\n   public timePref: string,\n   public subscribe: boolean\n  ) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}