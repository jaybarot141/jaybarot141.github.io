{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/form-details/form-details.component.ts","webpack:///src/app/form-details/form-details.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/register-form/register-form.component.ts","webpack:///src/app/register-form/register-form.component.html","webpack:///src/app/register-success/register-success.component.ts","webpack:///src/app/register-success/register-success.component.html","webpack:///src/app/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","title","isHidden","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FormDetailsComponent","HomeComponent","userName","RegisterFormComponent","proficiency","radioValues","userModel","RegisterSuccessComponent","User","name","email","phone","prof","timePref","subscribe","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RegisterFormComponent} from \"./register-form/register-form.component\";\nimport {RegisterSuccessComponent} from \"./register-success/register-success.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {FormDetailsComponent} from \"./form-details/form-details.component\";\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent},\n  { path: 'form', component: RegisterFormComponent},\n  { path: 'detail', component: FormDetailsComponent},\n  { path: 'success', component: RegisterSuccessComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [RegisterFormComponent, RegisterSuccessComponent,\n  HomeComponent, FormDetailsComponent];\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pracAng';\n  public isHidden = false;\n\n  Start(){\n    this.isHidden = true;\n  }\n}\n","<div id=\"title\" class=\"bg-lavender\">\n  <h1 align=\"center\">\n    Welcome to Angular Registration\n  </h1>\n</div>\n<div *ngIf=\"!isHidden\" class=\"row\" style=\"margin-top: 15%\">\n  <div class=\"col-md-6 offset-md-3\" style=\"text-align: center\">\n    <button (click)=\"Start()\" routerLink=\"/home\" class=\"btn btn-success start-btn\">\n      Let's GO!</button>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from \"@angular/forms\";\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-details',\n  templateUrl: './form-details.component.html',\n  styleUrls: ['./form-details.component.css']\n})\nexport class FormDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <label>Welcome, [[Name Here]]</label>\n    </div>\n    <div class=\"col-md-4\">\n      <button routerLink=\"../form\" class=\"btn btn-warning\">Back to Form Filling</button>\n    </div>\n  </div>\n</div>\n<br>\n<div id=\"details\" class=\"container-fluid\">\n  <p>Here goes the details</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public userName = '';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"proceed\" class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h3>Welcome {{userName}}, to the Angular bootcamp</h3>\n    </div>\n  </div>\n  <form #userForm=\"ngForm\" novalidate>\n    <div class=\"form-group row\">\n      <div class=\"col-md-2 col-sm-4\">\n      <label>Provide your name:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input required #name=\"ngModel\" type=\"text\" class=\"form-control\"\n               [class.is-invalid]=\"name.invalid && name.touched\"\n               name=\"userName\" [(ngModel)]=\"userName\">\n        <div *ngIf=\"name.errors && (name.invalid && name.touched)\">\n          <small class=\"text-danger\" *ngIf=\"name.errors.required\">Name Field is Required</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\" style=\"text-align: center\">\n        <button class=\"btn btn-primary\" [disabled]=\"!userForm.form.valid\" type=\"submit\"\n        routerLink=\"/form\">Proceed to Register</button>\n      </div>\n    </div>\n\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../user\";\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent implements OnInit {\n\n  proficiency = ['Beginner', 'Intermediate', 'Professional'];\n  public radioValues = [\n    {\"val\": \"morning\", \"lab\":\"Morning (9AM - 12PM)\"},\n    {\"val\": \"evening\", \"lab\":\"Evening (5PM - 8PM)\"}\n  ]\n  \n  userModel = new User('Jay','jay@123',1234567890,'','morning',true);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <label class=\"label-padding\">Welcome, [[Name Here]]</label>\n    </div>\n    <div class=\"col-md-4\">\n      <button routerLink=\"/detail\" class=\"btn btn-warning\">Details about the course</button>\n    </div>\n  </div>\n</div>\n<br>\n<div id=\"formdiv\" class=\"container-fluid\">\n\n  <form #userForm=\"ngForm\" novalidate>\n    {{userForm.value|json}}\n    <hr>\n    {{userModel|json}}\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Name:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"userName\" [(ngModel)]=\"userModel.name\"\n        required [class.is-invalid]=\"name.invalid && name.touched\">\n        <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">Name is required</small>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Email:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"email\" class=\"form-control\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"userModel.email\"\n        required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}\" [class.is-invalid]=\"email.invalid && email.touched\">\n        <div *ngIf=\"email.errors && (email.invalid && email.touched)\">\n          <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email is required</small>\n          <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Enter a valid email</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-1 col-sm-4\">\n        <label class=\"label-padding\">Phone:</label>\n      </div>\n      <div class=\"col-md-4 col-sm 8\">\n        <input type=\"tel\" class=\"form-control\" #phone=\"ngModel\" name=\"phone\" [(ngModel)]=\"userModel.phone\"\n        required pattern=\".{10}\" [class.is-invalid]=\"phone.invalid && phone.touched\">\n        <div *ngIf=\"phone.errors && (phone.invalid && phone.touched)\">\n          <small class=\"text-danger\" *ngIf=\"phone.errors.required\">Phone number is required</small>\n          <small class=\"text-danger\" *ngIf=\"phone.errors.pattern\">Phone number should be 10 digits</small>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <div class=\"col-md-4 col-sm 8 offset-md-1 offset-sm-1\">\n        <select class=\"custom-select\" name=\"prof\" #prof=\"ngModel\" [(ngModel)]=\"userModel.prof\">\n          <option selected>Proficiency</option>\n          <option *ngFor=\"let prof of proficiency\">{{prof}}</option>\n        </select>\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      <div class=\"row\">\n        <div class=\"col-md-2 col-sm-2\">\n          <label class=\"label-padding\">Time Preference:</label>\n        </div>\n      </div>\n<!--      <div class=\"row no-gutters\">-->\n<!--        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">-->\n<!--          <label class=\"form-check-label\">Morning (9AM - 12PM)</label>-->\n<!--          <input  style=\"margin-top: 0.4rem;margin-left: 1.0rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\" value=\"morning\" [(ngModel)]=\"userModel.timePref\">-->\n<!--        </div>-->\n<!--      </div>-->\n<!--      <div class=\"row no-gutters\">-->\n<!--        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">-->\n<!--          <label class=\"form-check-label\">Evening (5PM - 8PM)</label>-->\n<!--          <input style=\"margin-top: 0.4rem;margin-left: 1.9rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\" value=\"evening\" [(ngModel)]=\"userModel.timePref\">-->\n<!--        </div>-->\n<!--      </div>-->\n      <div *ngFor=\"let rad of radioValues\" class=\"row no-gutters\">\n        <div class=\"col-md-4 col-sm-4 offset-md-1 offset-sm-1\">\n          <label class=\"form-check-label\">{{rad.lab}}</label>\n          <input  style=\"margin-top: 0.4rem;margin-left: 1.0rem;\" class=\"form-check-input\" type=\"radio\" #timepref=\"ngModel\" name=\"timePreference\"\n                  required [value]=\"rad.val\" [(ngModel)]=\"userModel.timePref\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-6\">\n        <label class=\"label-padding\">Send me promotional offers :</label>\n        <input style=\"margin-top: 1.0rem; margin-left: 1.0rem\" class=\"form-check-input\" type=\"checkbox\" #subscribe=\"ngModel\" name=\"subscribe\" [(ngModel)]=\"userModel.subscribe\">\n      </div>\n    </div>\n\n    <button routerLink=\"../success\" style=\"margin-left: 10px\" class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-success',\n  templateUrl: './register-success.component.html',\n  styleUrls: ['./register-success.component.css']\n})\nexport class RegisterSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <p>Congratulations! You Have Successfully submitted your form </p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <button routerLink=\"\" class=\"btn btn-success\">Back to Home Page</button>\n    </div>\n  </div>\n</div>\n","export class User {\n  constructor(\n   public name: string,\n   public email: string,\n   public phone: number,\n   public prof: string,\n   public timePref: string,\n   public subscribe: boolean\n  ) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}